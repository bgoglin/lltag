#!/usr/bin/perl -w

use strict ;
no strict "refs" ;

# format parameters
# (%a = artist, %t = title, %A = album, %n = number, %g = genre, %y = year)
my @field_name = ('Artist', 'Title', 'Album', 'Track Number', 'Genre', 'Year') ;
my @field_format_name = ('a', 't', 'A', 'n', 'g', 'y') ;
my @field_mp3info_option = ('a', 't', 'l', 'n', 'g', 'y') ;
my @field_default = (undef, undef, undef, undef, undef, undef) ;
my $fields = $#field_name + 1;

# usage
sub usage()
{
  print STDERR $0." is a mp3info frontend to flexibly tag mp3.\n" ;
  print STDERR "Usage: ".$0." [options] format files...\n" ;
  print STDERR "   format is composed of anything you want with special fields:\n" ;
  print STDERR (map { "     %".$field_format_name[$_]." means ".$field_name[$_]."\n" } ( 0 .. $fields-1 )) ;
  print STDERR "     %d means Dummy text\n" ;
  print STDERR "     %% means %\n" ;
  print STDERR "   available options are:\n" ;
  print STDERR "     --dry-run  Do nothing but show what would have been done\n" ;
  print STDERR "     -v         Verbose\n" ;
  print STDERR "     -b         Remove the path from filenames when matching the format\n" ;
  print STDERR (map { "     -".$field_format_name[$_]." <val>   Set the default value for ".$field_name[$_]."\n" } ( 0 .. $fields-1 )) ;
  print STDERR "     -h         Show this help\n" ;
  exit 1;
}

# cmdline options
my $basename_opt = 0 ;
my $dryrun_opt = 0 ;
my $verbose_opt = 0 ;

usage() if ($#ARGV == -1) ;

while (1) {
  my $arg = $ARGV[0];
  last if (! ($arg =~ /^-/) );
  if ($arg eq "-b") {
    $basename_opt = 1;
  } elsif ($arg eq "--dry-run") {
    $dryrun_opt = 1;
  } elsif ($arg eq "-v") {
    $verbose_opt = 1;
  } elsif ($arg eq "-h") {
    usage() ;
  } else {
    # default field value
    my $i = (grep { $arg eq "-".$field_format_name[$_] } ( 0 .. $fields-1 )) [0];
    if (defined $i) {
      $field_default[$i] = $ARGV[1];
      shift ;
    }
  }
  shift ;
}

# get the format
my $format = $ARGV[0] ;

# change it into a parsing string
my $field_format_names = (join '|', @field_format_name).'|d' ;
my $parser = $format;
$parser =~ s/(^|[^%])%($field_format_names)/$1(.*)/g ;

# get the field name of each indice in the format
my @format_indice_field ;
$format =~ $parser ;
my $i = 1;
while ( defined ${$i} ) {
  if (${$i} eq '%d') {
    $format_indice_field[$i] = -1;
  } else {
    my @indices = grep { ${$i} eq "%".$field_format_name[$_] } ( 0 .. $fields-1 );
    $format_indice_field[$i] = $indices[0];
  }
  $i++;
}

# change de %% into % now and not before
$parser =~ s/%%/%/g ;
print "Parsing with: ".$parser."\n" if ($verbose_opt);
print "Fields are: ".(join ' ', @format_indice_field) ."\n" if ($verbose_opt);

# get the number of indices in the format
my $indices = $i-1;

# parse the file name
my $arg = 1;
while ( defined $ARGV[$arg] ) {
  my $file = $ARGV[$arg] ;
  print "Tagging file \"".$file."\"...\n" ;

  # removing path if asked
  if ($basename_opt && $file =~ /\//) {
    $file =~ s/.*\/([^\/]+)/$1/ ;
  }

  # getting fields
  my @field = @field_default ;
  $#field = $fields ;
  if ($file =~ $parser) {
    my $i = 1;
    while ( $i <= $indices ) {
      if ( $format_indice_field[$i] >= 0 ) {
        $field[$format_indice_field[$i]] = ${$i};
      }
      $i++;
    }
    
    # tagging
    my @system_args =
      ( "mp3info" ,
        ( map { "-".$field_mp3info_option[$_] , $field[$_] }
          ( grep { defined $field[$_] } ( 0 .. $fields-1 ) )
        ) ,
        $file
      ) ;
    if ($dryrun_opt) {
      print +(join '#', @system_args) ."\n" ;
    } else {
      system @system_args ;
    }
  } else {
    print STDERR "  ERROR: Filename \"".$file."\" does not match format \"".$format."\".\n" ;
  }
  $arg++ ;
}
